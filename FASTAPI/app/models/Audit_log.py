# models/audit_log.py
""""
This module defines the AuditLog model, which represents the audit logs
generated by the system. It includes attributes such as user ID, action,
table name, old values, new values, IP address, and creation timestamp.
"""
from sqlalchemy import Column, Integer, String, DateTime
from sqlalchemy.dialects.postgresql import JSON

from db.database import Base

# pylint: disable=too-few-public-methods
class AuditLog(Base):
    """
    Represents an audit log entry in the database.
    Attributes:
        log_id (int): The unique identifier for the audit log entry.
        user_id (int): The ID of the user associated with the action.
        action (str): The action performed by the user.
        table_name (str): The name of the table affected by the action.
        old_values (dict): The old values before the action was performed.
        new_values (dict): The new values after the action was performed.
        ip_address (str): The IP address of the user who performed the action.
        created_at (datetime): The timestamp when the log entry was created.
    """
    __tablename__ = "audit_log"

    log_id = Column(Integer, primary_key=True, index=True)
    user_id = Column(Integer) # ForeignKey("users.id")
    action = Column(String(255))
    table_name = Column(String(255))
    old_values = Column(JSON)
    new_values = Column(JSON)
    ip_address = Column(String(255))
    created_at = Column(DateTime)
