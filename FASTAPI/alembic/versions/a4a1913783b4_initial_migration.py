"""Initial migration

Revision ID: a4a1913783b4
Revises:
Create Date: 2025-05-11 23:28:44.140022

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy import Text  # Added import for Text

# revision identifiers, used by Alembic.
revision: str = 'a4a1913783b4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parent_category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_category_id'], ['categories.category_id'], ),
    sa.PrimaryKeyConstraint('category_id')
    )
    op.create_index(op.f('ix_categories_category_id'), 'categories', ['category_id'], unique=False)
    op.create_table('customers',
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('tax_id', sa.String(length=100), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('customer_id')
    )
    op.create_index(op.f('ix_customers_customer_id'), 'customers', ['customer_id'], unique=False)
    op.create_table('document_types',
    sa.Column('document_type_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('document_type_id')
    )
    op.create_index(op.f('ix_document_types_document_type_id'), 'document_types', ['document_type_id'], unique=False)
    op.create_table('payment_methods',
    sa.Column('payment_method_id', sa.Integer(), nullable=False),
    sa.Column('payment_method_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('requires_authorization', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('payment_method_id')
    )
    op.create_index(op.f('ix_payment_methods_description'), 'payment_methods', ['description'], unique=False)
    op.create_index(op.f('ix_payment_methods_payment_method_id'), 'payment_methods', ['payment_method_id'], unique=False)
    op.create_index(op.f('ix_payment_methods_payment_method_name'), 'payment_methods', ['payment_method_name'], unique=False)
    op.create_table('promotions',
    sa.Column('promotion_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('discount_type', sa.String(length=255), nullable=True),
    sa.Column('discount_value', sa.Double(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('promotion_id')
    )
    op.create_index(op.f('ix_promotions_promotion_id'), 'promotions', ['promotion_id'], unique=False)
    op.create_table('roles',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('role_name', sa.String(length=100), nullable=False),
    sa.Column('role_description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('role_id')
    )
    op.create_index(op.f('ix_roles_role_id'), 'roles', ['role_id'], unique=False)
    op.create_table('products',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('sku', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('cost_price', sa.Float(), nullable=True),
    sa.Column('current_stock', sa.Integer(), nullable=True),
    sa.Column('min_stock', sa.Integer(), nullable=True),
    sa.Column('on_offer', sa.Boolean(), nullable=True),
    sa.Column('offer_price', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.category_id'], ),
    sa.PrimaryKeyConstraint('product_id'),
    sa.UniqueConstraint('sku')
    )
    op.create_index(op.f('ix_products_product_id'), 'products', ['product_id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=150), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_table('audit_log',
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=255), nullable=True),
    sa.Column('table_name', sa.String(length=255), nullable=True),
    sa.Column('old_values', postgresql.JSON(astext_type=Text()), nullable=True),
    sa.Column('new_values', postgresql.JSON(astext_type=Text()), nullable=True),
    sa.Column('ip_address', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_index(op.f('ix_audit_log_log_id'), 'audit_log', ['log_id'], unique=False)
    op.create_table('inventory_movements',
    sa.Column('movement_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('movement_type', sa.String(length=255), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.product_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('movement_id')
    )
    op.create_index(op.f('ix_inventory_movements_movement_id'), 'inventory_movements', ['movement_id'], unique=False)
    op.create_index(op.f('ix_inventory_movements_movement_type'), 'inventory_movements', ['movement_type'], unique=False)
    op.create_index(op.f('ix_inventory_movements_product_id'), 'inventory_movements', ['product_id'], unique=False)
    op.create_index(op.f('ix_inventory_movements_reference_id'), 'inventory_movements', ['reference_id'], unique=False)
    op.create_index(op.f('ix_inventory_movements_user_id'), 'inventory_movements', ['user_id'], unique=False)
    op.create_table('product_promotions',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('promotion_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.product_id'], ),
    sa.ForeignKeyConstraint(['promotion_id'], ['promotions.promotion_id'], ),
    sa.PrimaryKeyConstraint('product_id', 'promotion_id')
    )
    op.create_table('sales',
    sa.Column('sale_id', sa.Integer(), nullable=False),
    sa.Column('document_type_id', sa.Integer(), nullable=False),
    sa.Column('serial_number', sa.String(length=100), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subtotal', sa.Float(), nullable=False),
    sa.Column('tax_amount', sa.Float(), nullable=False),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=True),
    sa.Column('payment_method', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.customer_id'], ),
    sa.ForeignKeyConstraint(['document_type_id'], ['document_types.document_type_id'], ),
    sa.ForeignKeyConstraint(['payment_method'], ['payment_methods.payment_method_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('sale_id')
    )
    op.create_index(op.f('ix_sales_sale_id'), 'sales', ['sale_id'], unique=False)
    op.create_table('payments',
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('sale_id', sa.Integer(), nullable=True),
    sa.Column('payment_method_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Double(), nullable=True),
    sa.Column('transaction_code', sa.String(length=255), nullable=True),
    sa.Column('payment_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['payment_method_id'], ['payment_methods.payment_method_id'], ),
    sa.ForeignKeyConstraint(['sale_id'], ['sales.sale_id'], ),
    sa.PrimaryKeyConstraint('payment_id')
    )
    op.create_index(op.f('ix_payments_payment_id'), 'payments', ['payment_id'], unique=False)
    op.create_index(op.f('ix_payments_payment_method_id'), 'payments', ['payment_method_id'], unique=False)
    op.create_index(op.f('ix_payments_sale_id'), 'payments', ['sale_id'], unique=False)
    op.create_table('sale_details',
    sa.Column('sale_detail_id', sa.Integer(), nullable=False),
    sa.Column('sale_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('unit_price', sa.Double(), nullable=True),
    sa.Column('discount_percentage', sa.Double(), nullable=True),
    sa.Column('subtotal', sa.Double(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.product_id'], ),
    sa.ForeignKeyConstraint(['sale_id'], ['sales.sale_id'], ),
    sa.PrimaryKeyConstraint('sale_detail_id')
    )
    op.create_index(op.f('ix_sale_details_discount_percentage'), 'sale_details', ['discount_percentage'], unique=False)
    op.create_index(op.f('ix_sale_details_product_id'), 'sale_details', ['product_id'], unique=False)
    op.create_index(op.f('ix_sale_details_quantity'), 'sale_details', ['quantity'], unique=False)
    op.create_index(op.f('ix_sale_details_sale_detail_id'), 'sale_details', ['sale_detail_id'], unique=False)
    op.create_index(op.f('ix_sale_details_sale_id'), 'sale_details', ['sale_id'], unique=False)
    op.create_index(op.f('ix_sale_details_unit_price'), 'sale_details', ['unit_price'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sale_details_unit_price'), table_name='sale_details')
    op.drop_index(op.f('ix_sale_details_sale_id'), table_name='sale_details')
    op.drop_index(op.f('ix_sale_details_sale_detail_id'), table_name='sale_details')
    op.drop_index(op.f('ix_sale_details_quantity'), table_name='sale_details')
    op.drop_index(op.f('ix_sale_details_product_id'), table_name='sale_details')
    op.drop_index(op.f('ix_sale_details_discount_percentage'), table_name='sale_details')
    op.drop_table('sale_details')
    op.drop_index(op.f('ix_payments_sale_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_payment_method_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_payment_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_sales_sale_id'), table_name='sales')
    op.drop_table('sales')
    op.drop_table('product_promotions')
    op.drop_index(op.f('ix_inventory_movements_user_id'), table_name='inventory_movements')
    op.drop_index(op.f('ix_inventory_movements_reference_id'), table_name='inventory_movements')
    op.drop_index(op.f('ix_inventory_movements_product_id'), table_name='inventory_movements')
    op.drop_index(op.f('ix_inventory_movements_movement_type'), table_name='inventory_movements')
    op.drop_index(op.f('ix_inventory_movements_movement_id'), table_name='inventory_movements')
    op.drop_table('inventory_movements')
    op.drop_index(op.f('ix_audit_log_log_id'), table_name='audit_log')
    op.drop_table('audit_log')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_products_product_id'), table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_roles_role_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_promotions_promotion_id'), table_name='promotions')
    op.drop_table('promotions')
    op.drop_index(op.f('ix_payment_methods_payment_method_name'), table_name='payment_methods')
    op.drop_index(op.f('ix_payment_methods_payment_method_id'), table_name='payment_methods')
    op.drop_index(op.f('ix_payment_methods_description'), table_name='payment_methods')
    op.drop_table('payment_methods')
    op.drop_index(op.f('ix_document_types_document_type_id'), table_name='document_types')
    op.drop_table('document_types')
    op.drop_index(op.f('ix_customers_customer_id'), table_name='customers')
    op.drop_table('customers')
    op.drop_index(op.f('ix_categories_category_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ####